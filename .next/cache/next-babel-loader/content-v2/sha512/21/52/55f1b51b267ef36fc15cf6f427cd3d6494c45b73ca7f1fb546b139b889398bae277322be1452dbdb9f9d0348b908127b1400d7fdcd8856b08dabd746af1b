{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/aristant/Music/start_with_nextjs/calculatrice_imc/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"C:/Users/aristant/Music/start_with_nextjs/calculatrice_imc/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport fetch from 'isomorphic-unfetch';\nvar baseURL = \"http://localhost:3000\";\nexport var getData = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(url, token) {\n    var res, data;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return fetch(\"\".concat(baseURL, \"/api\").concat(url), {\n              method: 'GET',\n              headers: {\n                'Authorization': token\n              }\n            });\n\n          case 2:\n            res = _context.sent;\n            _context.next = 5;\n            return res.json();\n\n          case 5:\n            data = _context.sent;\n            return _context.abrupt(\"return\", data);\n\n          case 7:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function getData(_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}();\nexport var postData = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(url, post, token) {\n    var res, data;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return fetch(\"\".concat(baseURL, \"/\").concat(url), {\n              method: 'POST',\n              headers: {\n                'Authorization': token\n              },\n              body: JSON.stringify(post)\n            });\n\n          case 2:\n            res = _context2.sent;\n            console.log(res);\n            _context2.next = 6;\n            return res.json();\n\n          case 6:\n            data = _context2.sent;\n            return _context2.abrupt(\"return\", data);\n\n          case 8:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n\n  return function postData(_x3, _x4, _x5) {\n    return _ref2.apply(this, arguments);\n  };\n}();\nexport var putData = /*#__PURE__*/function () {\n  var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(url, post, token) {\n    var res, data;\n    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.next = 2;\n            return fetch(\"\".concat(baseURL, \"/api\").concat(url), {\n              method: 'PUT',\n              headers: {\n                'Content-Type': 'application/json',\n                'Authorization': token\n              },\n              body: JSON.stringify(post)\n            });\n\n          case 2:\n            res = _context3.sent;\n            _context3.next = 5;\n            return res.json();\n\n          case 5:\n            data = _context3.sent;\n            return _context3.abrupt(\"return\", data);\n\n          case 7:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n\n  return function putData(_x6, _x7, _x8) {\n    return _ref3.apply(this, arguments);\n  };\n}();\nexport var patchData = /*#__PURE__*/function () {\n  var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(url, post, token) {\n    var res, data;\n    return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            _context4.next = 2;\n            return fetch(\"\".concat(baseURL, \"/api\").concat(url), {\n              method: 'PATCH',\n              headers: {\n                'Content-Type': 'application/json',\n                'Authorization': token\n              },\n              body: JSON.stringify(post)\n            });\n\n          case 2:\n            res = _context4.sent;\n            _context4.next = 5;\n            return res.json();\n\n          case 5:\n            data = _context4.sent;\n            return _context4.abrupt(\"return\", data);\n\n          case 7:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4);\n  }));\n\n  return function patchData(_x9, _x10, _x11) {\n    return _ref4.apply(this, arguments);\n  };\n}();\nexport var deleteData = /*#__PURE__*/function () {\n  var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5(url, token) {\n    var res, data;\n    return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            _context5.next = 2;\n            return fetch(\"\".concat(baseURL, \"/api\").concat(url), {\n              method: 'DELETE',\n              headers: {\n                'Content-Type': 'application/json',\n                'Authorization': token\n              }\n            });\n\n          case 2:\n            res = _context5.sent;\n            _context5.next = 5;\n            return res.json();\n\n          case 5:\n            data = _context5.sent;\n            return _context5.abrupt(\"return\", data);\n\n          case 7:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, _callee5);\n  }));\n\n  return function deleteData(_x12, _x13) {\n    return _ref5.apply(this, arguments);\n  };\n}();","map":{"version":3,"sources":["C:/Users/aristant/Music/start_with_nextjs/calculatrice_imc/utils/fetchData.js"],"names":["fetch","baseURL","getData","url","token","method","headers","res","json","data","postData","post","body","JSON","stringify","console","log","putData","patchData","deleteData"],"mappings":"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","sourcesContent":["import fetch from 'isomorphic-unfetch';\r\nconst baseURL = \"http://localhost:3000\";\r\nexport const getData = async (url, token) => {\r\n    const res = await fetch(`${baseURL}/api${url}`, {\r\n        method: 'GET',\r\n        headers: {\r\n            'Authorization': token\r\n        }\r\n    });\r\n    const data = await res.json();\r\n    return data;\r\n}\r\n\r\nexport const postData = async (url, post, token) => {\r\n    const res = await fetch(`${baseURL}/${url}`, {\r\n        method: 'POST',\r\n        headers: {\r\n            'Authorization': token\r\n        },\r\n        body: JSON.stringify(post)\r\n    });\r\n    console.log(res);\r\n    const data = await res.json();\r\n    return data;\r\n}\r\n\r\nexport const putData = async (url, post, token) => {\r\n    const res = await fetch(`${baseURL}/api${url}`, {\r\n        method: 'PUT',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            'Authorization': token\r\n        },\r\n        body: JSON.stringify(post)\r\n    });\r\n    const data = await res.json();\r\n    return data;\r\n}\r\n\r\nexport const patchData = async (url, post, token) => {\r\n    const res = await fetch(`${baseURL}/api${url}`, {\r\n        method: 'PATCH',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            'Authorization': token\r\n        },\r\n        body: JSON.stringify(post)\r\n    });\r\n    const data = await res.json();\r\n    return data;\r\n}\r\n\r\nexport const deleteData = async (url, token) => {\r\n    const res = await fetch(`${baseURL}/api${url}`, {\r\n        method: 'DELETE',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            'Authorization': token\r\n        }\r\n    });\r\n    const data = await res.json();\r\n    return data;\r\n}"]},"metadata":{},"sourceType":"module"}