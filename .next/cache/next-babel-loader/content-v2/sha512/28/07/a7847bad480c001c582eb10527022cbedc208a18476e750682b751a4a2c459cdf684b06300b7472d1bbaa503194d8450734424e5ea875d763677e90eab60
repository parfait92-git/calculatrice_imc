{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport ACTIONS from './Actions';\n\nconst reducers = (state, action) => {\n  switch (action.type) {\n    case ACTIONS.NOTIFY:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        notify: action.payload\n      });\n\n    case ACTIONS.SAVE_INDICE:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        indice: action.payload\n      });\n\n    case ACTIONS.UPDATE_IMC:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        imc: action.payload\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default reducers;","map":{"version":3,"sources":["C:/Users/aristant/Music/start_with_nextjs/calculatrice_imc/pages/state/Reducers.js"],"names":["ACTIONS","reducers","state","action","type","NOTIFY","notify","payload","SAVE_INDICE","indice","UPDATE_IMC","imc"],"mappings":";;;;;;AAAA,OAAOA,OAAP,MAAoB,WAApB;;AAEA,MAAMC,QAAQ,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAChC,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKJ,OAAO,CAACK,MAAb;AACI,6CACOH,KADP;AAEII,QAAAA,MAAM,EAAEH,MAAM,CAACI;AAFnB;;AAIJ,SAAKP,OAAO,CAACQ,WAAb;AACI,6CACON,KADP;AAEIO,QAAAA,MAAM,EAAEN,MAAM,CAACI;AAFnB;;AAIA,SAAKP,OAAO,CAACU,UAAb;AACA,6CACOR,KADP;AAEIS,QAAAA,GAAG,EAAER,MAAM,CAACI;AAFhB;;AAIJ;AACI,aAAOL,KAAP;AAjBR;AAmBH,CApBD;;AAsBA,eAAeD,QAAf","sourcesContent":["import ACTIONS from './Actions';\r\n\r\nconst reducers = (state, action) => {\r\n    switch(action.type) {\r\n        case ACTIONS.NOTIFY: \r\n            return {\r\n                ...state, \r\n                notify: action.payload\r\n            };\r\n        case ACTIONS.SAVE_INDICE: \r\n            return {\r\n                ...state,\r\n                indice: action.payload\r\n            };\r\n            case ACTIONS.UPDATE_IMC: \r\n            return {\r\n                ...state,\r\n                imc: action.payload\r\n            };\r\n        default: \r\n            return state;\r\n    }\r\n}\r\n\r\nexport default reducers;"]},"metadata":{},"sourceType":"module"}