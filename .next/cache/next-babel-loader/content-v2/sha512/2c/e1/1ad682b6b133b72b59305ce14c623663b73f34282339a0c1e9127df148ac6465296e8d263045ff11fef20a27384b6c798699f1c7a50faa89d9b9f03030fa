{"ast":null,"code":"import connectDB from '../../../utils/connectDB';\nimport ImcSchema from '../../../models/Imc';\nimport valid from '../../../utils/valid';\nconnectDB();\nexport default (async (req, res) => {\n  if (req.methode === \"POST\") {\n    await saveIndice(req, res);\n  }\n});\n\nconst saveIndice = async (req, res) => {\n  try {\n    const {\n      taille,\n      poids,\n      careeTaille,\n      imc,\n      poids_normal\n    } = req.body;\n    const errMsg = valid(taille, poids);\n\n    if (errMsg) {\n      return res.status(400).json({\n        err: errMsg\n      });\n    }\n\n    const newIndice = new ImcSchema({\n      taille,\n      poids,\n      careeTaille: taille > 0 ? taille * taille : 0,\n      imc: taille > 0 || poids > 0 ? poids / careeTaille : 0,\n      poids_normal: imc != 0 ? imc * careeTaille : 0\n    });\n    await newIndice.save();\n    res.json({\n      \"message\": \"succes d'enregistrement!\"\n    });\n  } catch (error) {\n    return res.status(500);\n  }\n};","map":{"version":3,"sources":["C:/Users/aristant/Music/start_with_nextjs/calculatrice_imc/pages/api/indices/saveindice.js"],"names":["connectDB","ImcSchema","valid","req","res","methode","saveIndice","taille","poids","careeTaille","imc","poids_normal","body","errMsg","status","json","err","newIndice","save","error"],"mappings":"AAAA,OAAOA,SAAP,MAAsB,0BAAtB;AACA,OAAOC,SAAP,MAAsB,qBAAtB;AACA,OAAOC,KAAP,MAAkB,sBAAlB;AACAF,SAAS;AAET,gBAAe,OAAOG,GAAP,EAAYC,GAAZ,KAAoB;AAC/B,MAAGD,GAAG,CAACE,OAAJ,KAAc,MAAjB,EAAyB;AACrB,UAAMC,UAAU,CAACH,GAAD,EAAMC,GAAN,CAAhB;AACH;AACJ,CAJD;;AAMA,MAAME,UAAU,GAAG,OAAOH,GAAP,EAAYC,GAAZ,KAAoB;AACnC,MAAI;AACA,UAAM;AAAEG,MAAAA,MAAF;AAAUC,MAAAA,KAAV;AAAiBC,MAAAA,WAAjB;AAA8BC,MAAAA,GAA9B;AAAmCC,MAAAA;AAAnC,QAAoDR,GAAG,CAACS,IAA9D;AACA,UAAMC,MAAM,GAAGX,KAAK,CAACK,MAAD,EAASC,KAAT,CAApB;;AACA,QAAGK,MAAH,EAAW;AACP,aAAOT,GAAG,CAACU,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAACC,QAAAA,GAAG,EAAEH;AAAN,OAArB,CAAP;AACH;;AACD,UAAMI,SAAS,GAAG,IAAIhB,SAAJ,CAAc;AAC5BM,MAAAA,MAD4B;AAE5BC,MAAAA,KAF4B;AAG5BC,MAAAA,WAAW,EAAEF,MAAM,GAAE,CAAR,GAAWA,MAAM,GAACA,MAAlB,GAAyB,CAHV;AAI5BG,MAAAA,GAAG,EAAEH,MAAM,GAAE,CAAR,IAAaC,KAAK,GAAC,CAAnB,GAAsBA,KAAK,GAACC,WAA5B,GAAwC,CAJjB;AAK5BE,MAAAA,YAAY,EAAED,GAAG,IAAE,CAAL,GAAQA,GAAG,GAACD,WAAZ,GAAwB;AALV,KAAd,CAAlB;AAOA,UAAMQ,SAAS,CAACC,IAAV,EAAN;AACAd,IAAAA,GAAG,CAACW,IAAJ,CAAS;AAAC,iBAAW;AAAZ,KAAT;AACH,GAfD,CAeE,OAAOI,KAAP,EAAc;AACZ,WAAOf,GAAG,CAACU,MAAJ,CAAW,GAAX,CAAP;AACH;AACJ,CAnBD","sourcesContent":["import connectDB from '../../../utils/connectDB';\r\nimport ImcSchema from '../../../models/Imc';\r\nimport valid from '../../../utils/valid';\r\nconnectDB();\r\n\r\nexport default async (req, res) => {\r\n    if(req.methode===\"POST\") {\r\n        await saveIndice(req, res);\r\n    }\r\n}\r\n\r\nconst saveIndice = async (req, res) => {\r\n    try {\r\n        const { taille, poids, careeTaille, imc, poids_normal } = req.body;\r\n        const errMsg = valid(taille, poids);\r\n        if(errMsg) {\r\n            return res.status(400).json({err: errMsg})\r\n        }\r\n        const newIndice = new ImcSchema({ \r\n            taille, \r\n            poids, \r\n            careeTaille: taille> 0? taille*taille:0, \r\n            imc: taille >0 || poids>0? poids/careeTaille:0, \r\n            poids_normal: imc!=0? imc*careeTaille:0 \r\n        });\r\n        await newIndice.save();\r\n        res.json({\"message\": \"succes d'enregistrement!\"});\r\n    } catch (error) {\r\n        return res.status(500);\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}